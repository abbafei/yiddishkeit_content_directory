bH

- entity types:
	- endpoint (e.g. android app, pdf file, web site link, rss feed)
	- resource (e.g. app, book, video series/podcast)
	- site/organization/group

- preprocessor/uniformeralach processor types:
	- input types:
		- endpoint: a string, or a map with ref key and optional label
		- endpoints:
			- can be string, output one web endpoint
			- can be map, in which case each value in it...
				- can be a string, which is output as one endpoint with key type, and a ref with no label
				- can be an array, in which each entry is an endpoint
		- type (content only) - media type
			- can be a string
			- can be a list of strings (type, subtype, sub-subtype, vechulu, kind of like mime type)
		- title
			- can be a string, if so output just main title
			- can be a map with main (title) and subtitle
		- fee - can be boolean or map
			- if map, key called "has_fee" with bool value, and optional description with more detail about fee
	- output types:
		- languages (content only?) - optional list of language code strings
		- site_id - optional id of a site it is created by/part of
		- part_of - optional id of another item of which item is a part
		- title - human-readable name
		- subtitle - optional subtitle, from site
		- description (content only?) - describes the content
		- main_category: main category of the content
		- tags (content only) - categories of the content - list of strings
		- target_audience (content only) - optional, list of audience types (strings) that content seems tailored to
		- endpoint: a map, with keys ref (the input itself, if it was a string) and label
		- endpoints: a map
			- keys representing the endpoint type
			- values should be lists, with each item an endpoint
				- if we want to get only one endpoint and no more, prefer ones without a label, and prefer ones earlier in list to later ones
		- TODO: other description refactoring and short_description
		- content_type - list of strings - type of the item entry
			- types #: multiple types allowed, no hierarchy, tag-like
				#- brand - something with a logo, more or less :-)
				#	- TODO: use brand key instead?
				#- org - an organization or group who produces content, has one or more brands (it can also serve as a brand)
				- channel - a live (continuous? stream-like thing) with audio or video etc. (not a channel with multiple elements like podcast)
				- series - a group of items with an order (set-like)
				- group - like series, but unordered, and can have subzachin(?)
				- item - an individual video/audio/text/etc.
		- content_type: video, audio, text
			- TODO: way to indicate if something is content without specifying content type? (perhaps content_type: true?, or see if any items have a content_type, or have it as related_ids subitem or content)
		- container_type: how it's accessed
			- app
		- fee - array with map. earlier items in array take precedence, if we are before "until" date
			- has_fee - boolean
			- description - optional string
			- until - iso 8601 date/time; is time fee field applies until

TODO
	- bichlall
		- add items in this list to gitlab issue tracker :-)
	- schemas etc.
		- make a schema for for unprocessed/input objects too?
		- types.yml schema
			- additionalProperties no for most zachin?
			- endpoints wikidata checking?
		- validate endpoint refs with regexes (from wikidata maybe)?
	- item info
		- languages
			- language codes - which system/standard should these follow?
			- languages - if same content in multiple languages, do they have more than one content entry? what if same site but different content for each language?
			- filter languages?
		- fees
			- add "from" field to fees? (like "until")
		- endpoints
			- broken links
				- add section on contact form?
				- crawl for broken links?
			- check for working https on http uris, announcements, and endpoint formatters etc.?
			- (optionally) percent-encode aka urlencode refs?
				- if so, correct google podcasts urls
			- coalesce similar endpoint types (youtube for example)? if so, what if there are duplicates or endpoints that contain others (e.g. youtube channel that has playlist from endpoint)
			- main link:
				- use parent item web/main link sometimes? or maybe if indicated specifically?
					- if so, what type of related_id(s) are parent items?
				- allow is_main_url to be set to false on web links to disable automatically using web link as main link
			- item and/or endpoint rss feeds - specify manually? or add to web-type endpoints? or scrape from web sites automatically? or both?
			- third-party endpoint types: add flag instead of removing title?
				- third-party -- i.e. content does not necessarily originate from the same ppl as control site
				- verify using rel=me links? what if a site doesnt support/use them though?
				- can then filter out third-party endpoints, instead of (or in addition to) filtering out everything without a title
			- values
				- whatsapp group - include link to whatsapp group? if so, under content item or org item etc.?
		- announcements
			- add optional title field, to use for announcement link title (often can be title of blog post etc)?
				- can pull from html metadata perhaps, maybe make whitelist for article sources which do this?
				- also date etc. fields?
		- content types
			- for series content type, make a data field for how often items in series are released, if applicable? (daily, weekly, monthly, etc.)
		- media types
			- allow multiple?
				- maybe have main media type and media type list, similar to categories?
				- if so make processing and rendering zachin handle it
				- can remove "more" media type if so
			- automatically derive media_type and/or content_type from container_type=podcast? or maybe it might also have video.
		- source_{description,subtitle}
			- distinguish between descriptions and subtitles by the site itself, and descriptions by other peoplesalach
				- add remaining keys (description etc. at present) to item info pages
				- perhaps use prefixes like site_ or author_ etc for their keys
			- pull from sources?
		- related_ids
			- add "subsidiary" type or something like that (instead of more general and sometimes inaccurate "brand")
		- verification that references to types in type definitions exist (may be able to do this by templating the schema, and inserting the type values)
		- automatically generate item_types key? (with values/tags like content, brand, app, container/access_method
		- hierarchies
			- make able to generate hierarchy from related_ids
				- also can copy relevant data from those items e.g. target audience, categories, etc.
		- multi-part items (multiple pieces that form a "item" content-type item)
			- endpoint type? or related_ids type?
		- make better alternative to "more" categories and media_types?
	- compilation
		- when eleventy is in watch mode, have it delete old _site in between?
			- and also have it rerun on removed files
		- maybe more fields autogenerated from item sources metadata
			- chabad.org itemprops
			- json-ld
				- breadcrumbs list for related_ids?
				- @type for related_id types?
			- itunes-app
		- htmllint vechulu?
	- templates
		- are eleventy excerpts suppposed to be in data.page.excerpt?
			- use "log" filter to debug?
	- rendering etc.
		- media type icons - maybe from bootstrap icons
			- icons by item badges
		- microdata on item pages?
		- blog posts - english dates too?
		- item links and more macros/functions in templating vechulu
			- eleventyConfig.addFilter("item_id_to_info_link", function(value) { return `items/${this.slug(value)}`; });
				- or shortcode?
		- sitemap?
		- add previous page and next page links to individual blog posts?
		- add language info for items and endpoints
